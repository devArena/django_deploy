import os

DATABASES = {
    'default': {
        'NAME': '<%= @database[:settings][:database] %>',
        'ENGINE': 'django.db.backends.<%= @database[:settings][:adapter] %>',
        'USER': '<%= @database[:settings][:username] %>',
        'PASSWORD': '<%= @database[:settings][:password] %>',
        'HOST': '<%= @database[:host] %>',
        'PORT': '<%= @database[:settings][:port]  %>',
    },
}

CACHES = {
    'default': {
        'BACKEND': '<%= @cache[:type] %>',
        'LOCATION': '<%= @cache[:location] %>',
    }
}

<% if @debug %>
DEBUG = True
<% else %>
DEBUG = False
<% end %>

TEMPLATE_DEBUG = DEBUG

# Taken from http://stackoverflow.com/questions/4664724/distributing-django-projects-with-unique-secret-keys
try:
    from secret_key import *
except ImportError:
    SETTINGS_DIR=os.path.abspath(os.path.dirname(__file__))
    def generate_secret_key(file_name):
        import string
        from django.utils.crypto import get_random_string
        f = open(file_name, 'w')
        key = 'SECRET_KEY = "{}"\n'.format(get_random_string(100, string.ascii_letters))
        f.write(key)
        f.close()
    generate_secret_key(os.path.join(SETTINGS_DIR, 'secret_key.py'))
    from secret_key import *



